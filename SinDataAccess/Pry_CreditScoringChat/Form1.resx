<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imagesSmall.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>259, 56</value>
  </metadata>
  <metadata name="imagesLarge.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>379, 56</value>
  </metadata>
  <data name="imagesLarge.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA0
        DgAAAk1TRnQBSQFMAgEBAwEAAcwBAAHMAQABHgEAAR4BAAT/AQkBAAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABeAMAAR4DAAEBAQABCAUAARABDhgAAYACAAGAAwACgAEAAYADAAGAAQABgAEAAoACAAPAAQABwAHc
        AcABAAHwAcoBpgEAATMFAAEzAQABMwEAATMBAAIzAgADFgEAAxwBAAMiAQADKQEAA1UBAANNAQADQgEA
        AzkBAAGAAXwB/wEAAlAB/wEAAZMBAAHWAQAB/wHsAcwBAAHGAdYB7wEAAdYC5wEAAZABqQGtAgAB/wEz
        AwABZgMAAZkDAAHMAgABMwMAAjMCAAEzAWYCAAEzAZkCAAEzAcwCAAEzAf8CAAFmAwABZgEzAgACZgIA
        AWYBmQIAAWYBzAIAAWYB/wIAAZkDAAGZATMCAAGZAWYCAAKZAgABmQHMAgABmQH/AgABzAMAAcwBMwIA
        AcwBZgIAAcwBmQIAAswCAAHMAf8CAAH/AWYCAAH/AZkCAAH/AcwBAAEzAf8CAAH/AQABMwEAATMBAAFm
        AQABMwEAAZkBAAEzAQABzAEAATMBAAH/AQAB/wEzAgADMwEAAjMBZgEAAjMBmQEAAjMBzAEAAjMB/wEA
        ATMBZgIAATMBZgEzAQABMwJmAQABMwFmAZkBAAEzAWYBzAEAATMBZgH/AQABMwGZAgABMwGZATMBAAEz
        AZkBZgEAATMCmQEAATMBmQHMAQABMwGZAf8BAAEzAcwCAAEzAcwBMwEAATMBzAFmAQABMwHMAZkBAAEz
        AswBAAEzAcwB/wEAATMB/wEzAQABMwH/AWYBAAEzAf8BmQEAATMB/wHMAQABMwL/AQABZgMAAWYBAAEz
        AQABZgEAAWYBAAFmAQABmQEAAWYBAAHMAQABZgEAAf8BAAFmATMCAAFmAjMBAAFmATMBZgEAAWYBMwGZ
        AQABZgEzAcwBAAFmATMB/wEAAmYCAAJmATMBAANmAQACZgGZAQACZgHMAQABZgGZAgABZgGZATMBAAFm
        AZkBZgEAAWYCmQEAAWYBmQHMAQABZgGZAf8BAAFmAcwCAAFmAcwBMwEAAWYBzAGZAQABZgLMAQABZgHM
        Af8BAAFmAf8CAAFmAf8BMwEAAWYB/wGZAQABZgH/AcwBAAHMAQAB/wEAAf8BAAHMAQACmQIAAZkBMwGZ
        AQABmQEAAZkBAAGZAQABzAEAAZkDAAGZAjMBAAGZAQABZgEAAZkBMwHMAQABmQEAAf8BAAGZAWYCAAGZ
        AWYBMwEAAZkBMwFmAQABmQFmAZkBAAGZAWYBzAEAAZkBMwH/AQACmQEzAQACmQFmAQADmQEAApkBzAEA
        ApkB/wEAAZkBzAIAAZkBzAEzAQABZgHMAWYBAAGZAcwBmQEAAZkCzAEAAZkBzAH/AQABmQH/AgABmQH/
        ATMBAAGZAcwBZgEAAZkB/wGZAQABmQH/AcwBAAGZAv8BAAHMAwABmQEAATMBAAHMAQABZgEAAcwBAAGZ
        AQABzAEAAcwBAAGZATMCAAHMAjMBAAHMATMBZgEAAcwBMwGZAQABzAEzAcwBAAHMATMB/wEAAcwBZgIA
        AcwBZgEzAQABmQJmAQABzAFmAZkBAAHMAWYBzAEAAZkBZgH/AQABzAGZAgABzAGZATMBAAHMAZkBZgEA
        AcwCmQEAAcwBmQHMAQABzAGZAf8BAALMAgACzAEzAQACzAFmAQACzAGZAQADzAEAAswB/wEAAcwB/wIA
        AcwB/wEzAQABmQH/AWYBAAHMAf8BmQEAAcwB/wHMAQABzAL/AQABzAEAATMBAAH/AQABZgEAAf8BAAGZ
        AQABzAEzAgAB/wIzAQAB/wEzAWYBAAH/ATMBmQEAAf8BMwHMAQAB/wEzAf8BAAH/AWYCAAH/AWYBMwEA
        AcwCZgEAAf8BZgGZAQAB/wFmAcwBAAHMAWYB/wEAAf8BmQIAAf8BmQEzAQAB/wGZAWYBAAH/ApkBAAH/
        AZkBzAEAAf8BmQH/AQAB/wHMAgAB/wHMATMBAAH/AcwBZgEAAf8BzAGZAQAB/wLMAQAB/wHMAf8BAAL/
        ATMBAAHMAf8BZgEAAv8BmQEAAv8BzAEAAmYB/wEAAWYB/wFmAQABZgL/AQAB/wJmAQAB/wFmAf8BAAL/
        AWYBAAEhAQABpQEAA18BAAN3AQADhgEAA5YBAAPLAQADsgEAA9cBAAPdAQAD4wEAA+oBAAPxAQAD+AEA
        AfAB+wH/AQABpAKgAQADgAMAAf8CAAH/AwAC/wEAAf8DAAH/AQAB/wEAAv8CAAP/AQAB8wFGFCUBJAEq
        BSUBdAH0AUYKJQFMA5oBTAwlAXQeFB4AAUYVJQEwATcBMAUlAUwLJQF0A5oBdQH5DCUeFR4AAZMUJQE2
        ASIBEAFDATADJQFGAQcLRwWaA0cBTAglAUYeER4AAbwUJQEwAS8BMAE1ATADJQGTAfALRwWaAkcBTAIp
        AUYCJgQlAZMCQxwVHwABRhQlATcB+wFRBCUBvAEAAeMKRwWaAXUBRwFGATABUQVHASYBRgHwAUMdFR8A
        AW8VJQEkBCUBbwIAAbwKRwaaAfkIRwH5AQcBAAoVFBQfAAG8GSUBIAEHAwABBwZHAiUBFwaaAiUHRwGT
        AfABAAETHRQgAAGTASAIJQFvBJoBdAFGCCUBdAHwBAABvAGTAW8BRwMlASABdQaaAUwCJQEmAkcBFwGT
        AbwDAAHsAhMaFAETIAAB8AEcAW8BTAFGBCUBdAeaAUYEJQFGAUwBdAgAAbwBbgFFAUYCJQF6B5oBRgIl
        AZkIAAEHARIB6gFtFhMB6gFtARMlAAEHAe0BRQFMCJoBdAFFAW4B7wG8CgABBwFKBCMBJAF0B5oBTAIq
        AVEB8AgAAbwB9wFtARICbQHqDhMB6gJtAeoBEwHsAQcnAAHwAbwDmgN6ApoBGgG8DQABvAHvAyMBKQEj
        AVIBmgF6AZoBegOaAUsDKgGZCwABBwLsAm0B6goTAm0B6gFtAewB9wHwKwACmgF6A5oBegGaARoNAAG8
        BSMBKQEjAVIEmgF6BioBUQ4AAfAB7QJtARMHEgFtAeoB7QHwLgAB8AGZB5oBvAwAAbwBRAQjAikBUgia
        AUsDKgFLAfAPAAEHAW0B6gcSAesB8C8AAfAKmgG8CgAB8AG8ARwBSwFKAiMBKQFLCZoBegMqAUsB8BAA
        Ae8BEwYSAW0BvDAAARoKmgEaCgABvAEcAW4CIwMpAXQKmgFSAyoBvBAAAfcBEgfqAQcwAAGZCpoBGg0A
        AbwBcwEjASkBKguaAVIDKgG8DwABBwFtCOoB7C8AAfALmgEaDgAB8AFLAioLmgF0AyoBvA8AAe0BEgnq
        AQcuAAHwC5oBGg8AARwCKguaAXkCKgFLAfAOAAHwAm0J6gHtAfAtAAHwDJoPAAEHASoBSwuaAXkCKgFL
        DwABBwxtAbwtAAHwDJoPAAG8ASoBTAuaAXQCKgFRDwAB7wttARIBvC0AAbwMmgHwDgAB8AFLASoBeQF6
        AXQBUgeaAXQCKgFSDwAB7wttARIBvC0AARwBeQuaAbwPAAFLBCoBSwF0BpoBUgIqARwPAAHvC20B6gG8
        LQABHAFLCpoBdAEcDwABUQYqAXkEmgF5AyoBvA8AAe8MbQG8LQABHAEqAXoGmgJ5AZoBSwEcDwABcwYq
        AUwEmgFLAioBSwHwDwAB7wFtCusBbQG8LQABmQEqAVIEmgF5BSoBBw8AAbwHKgFSAZoBegQqARwQAAHv
        AW0K6wFtAbwtAAG8AioBUgKaAXQGKgHwDwAB8AF0ByoBUgUqAbwQAAEHDOsBvC0AAfABcwIqAVIBeQYq
        AVERAAGZDCoBvBEAAfAJ7AHrAewB7wHwLgABvAFLCCoBSwG8EQAB8AEcCioBmRMAAe8BbQnsAbwwAAEH
        AVEGKgFRAQcUAAF0AUsGKgFRAZkVAAGSAesG7AHrAQczAAG8AXQCSwFRAZkXAAG8AZkCSwFRARwBvBgA
        AfAB7AHqAusBbQHsAbwoAAFCAU0BPgcAAT4DAAEoAwABeAMAAR4DAAEBAQABAQUAAeABARYAA/9BAAGA
        AgABAgwAAYACAAEGAwABEAgAAYACAAEHAwABEAgAAcACAAEHAYACAAFwCAABwAIAAR8B4AEAAQcB+AgA
        Af4CAAH/AcABAAEDAfwIAAH/AYABBwH/AcABAAEDAf8BgAIAAcAEAAH/AeABDwH/AYABAAEDAf8B8AEA
        AQ8BwAQAAf8BwAEPAf8CAAEBAf8B/AEAAT8BwAQAAf8BgAEHAf4CAAEBAf8B/gEAAX8BwAQAAf8BgAEH
        Af4CAAEBAf8B/gEAAX8BwAQAAf8BgAEHAf8BwAEAAQEB/wH8AQABfwHABAAB/wEAAQcB/wHgAQABAQH/
        AfwBAAE/AcAEAAH/AQABBwH/AfABAAEBAf8B+AEAAR8BwAQAAf8BAAEHAf8B8AEAAQMB/wH4AQABHwHA
        BAAB/wEAAQcB/wHwAQABAwH/AfgBAAEfAcAEAAH/AQABAwH/AfABAAEDAf8B+AEAAR8BwAQAAf8BAAED
        Af8B+AEAAQMB/wH4AQABHwHABAAB/wEAAQMB/wH4AQABAwH/AfgBAAEfAcAEAAH/AQABAwH/AfgBAAED
        Af8B+AEAAR8BwAQAAf8BAAEDAf8B+AEAAQcB/wH4AQABHwHABAAB/wEAAQMB/wH4AQABBwH/AfgBAAEf
        AcAEAAH/AQABBwH/AfwBAAEPAf8B+AEAAR8BwAQAAf8BgAEHAf8B/AEAAR8B/wH8AQABPwHABAAB/wHA
        AQ8C/wEAAT8B/wH+AQABfwHABAAB/wHwAT8C/wGAA/8BAAH/AcAEAAs=
</value>
  </data>
</root>